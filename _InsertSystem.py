from pymongo import MongoClient
from create_database_entries_from_system import create_reference_elements, create_endmembers, create_mcsqs
from clean_poscar_from_Va import clean_poscar_from_Va

# Connect to MongoDB
client = MongoClient('mongodb://localhost:27017/')
db = client.DFTforCALPHAD
collection_system = db.System


# Example document with POSCAR data
task_data = {
    # TODO automated determination of optimal DFT parameters (with ML?)
    "system": "(A),(B)2(B)3,(H,Va)1,(H,Va)6",
    "elements": [['Ce', 'La'], ['Al', 'Ni'], ['Al', 'Ni'], ['H,Va'],['H,Va']],
    "structure": {
        "atomic_positions": [
            [[0.0000000000000000, 0.0000000000000000, 0.9800170000000000],
            [0.0000000000000000, 0.0000000000000000, 0.4800170000000001]],

            [[0.4991354800000001, 0.9982709600000002, 0.7493077900000000],
            [0.4991354800000001, 0.5008645199999999, 0.7493077900000000],
            [0.0017290399999998, 0.5008645199999999, 0.7493077900000000],
            [0.5008645199999999, 0.0017290399999998, 0.2493077900000000],
            [0.5008645199999999, 0.4991354800000001, 0.2493077900000000],
            [0.9982709600000002, 0.4991354800000001, 0.2493077900000000]],

            [[0.6666666666666666, 0.3333333333333333, 0.9937068099999999],
            [0.3333333333333333, 0.6666666666666666, 0.4937068099999999],
            [0.6666666666666666, 0.3333333333333333, 0.5186622100000000],
            [0.3333333333333333, 0.6666666666666666, 0.0186622100000000]],

            [[0.6666666666666666, 0.3333333333333333, 0.1776516799999999],
            [0.3333333333333333, 0.6666666666666666, 0.6776516799999999]],

            [[0.4934470850000000, 0.9868941700000000, 0.9407120099999999],
            [0.4934470850000000, 0.5065529150000000, 0.9407120099999999],
            [0.0131058300000000, 0.5065529150000000, 0.9407120099999999],
            [0.5065529150000000, 0.0131058300000000, 0.4407120099999999],
            [0.5065529150000000, 0.4934470850000000, 0.4407120099999999],
            [0.9868941700000000, 0.4934470850000000, 0.4407120099999999],
            [0.8464907250000000, 0.6929814500000000, 0.7252242700000000],
            [0.8464907250000000, 0.1535092750000000, 0.7252242700000000],
            [0.3070185500000000, 0.1535092750000000, 0.7252242700000000],
            [0.1535092750000000, 0.3070185500000000, 0.2252242700000000],
            [0.1535092750000000, 0.8464907250000000, 0.2252242700000000],
            [0.6929814500000000, 0.8464907250000000, 0.2252242700000000]]
        ],
        "lattice_parameters": [
            [2.6601930483934781, -4.6075895177590374, 0.0000000000000000],
            [2.6601930483934781, 4.6075895177590374, 0.0000000000000000],
            [0.0000000000000000, 0.0000000000000000, 8.6443317000001780]
        ]
        },
    "unit_cell_size": [2,2,1],
    "exceptions": [],
    "multiplicity": [1, 2, 3, 1, 6],
    'type': 'full',
    "calculation_information":
    {
        "cutoff": [400],
        "k_point_density": [0.22] , 
        "cores": 8  
        }, 
    "reference_solids": ["La", "Ni"]
}
# Inserting the document
collection_system.insert_one(task_data)

create_reference_elements()
create_endmembers()
##create_mcsqs()
#clean_poscar_from_Va()